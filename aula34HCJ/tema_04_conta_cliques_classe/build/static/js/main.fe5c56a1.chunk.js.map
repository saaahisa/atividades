{"version":3,"sources":["Components/Exemplo.jsx","Components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Exemplo","props","state","contador","this","onClick","setState","Component","estilo","color","borderBottom","backgroundColor","Header","style","nome","defaultProps","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRA4BeA,E,kDAvBf,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GAHC,E,0CAOf,WAAU,IAAD,OACL,OACI,gCACI,gDAAgBC,KAAKF,MAAMC,SAA3B,YACA,wBACIE,QAAS,kBACL,EAAKC,SAAS,CAAEH,SAAU,EAAKD,MAAMC,SAAW,KAFxD,gC,GAdMI,aCChBC,EAAS,CACXC,MAAO,MACPC,aAAc,kBACdC,gBAAiB,WAGRC,EAAb,4JACI,WACI,OACI,8BACI,qBAAIC,MAAOL,EAAX,qBAAyBJ,KAAKH,MAAMa,KAApC,6BAJhB,GAA4BP,aAU3BK,EAAOG,aAAe,CAClBD,KAAM,kBAOIF,QCtBFI,EAAb,4JACI,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,EAAD,CAAQH,KAAK,UACb,cAAC,EAAD,WALhB,GAAyBP,aAWVS,ICJAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe5c56a1.chunk.js","sourcesContent":["import { Component } from 'react';  \r\n  \r\nclass Exemplo extends Component {  \r\n// Declare uma nova variável de estado, a qual chamaremos de \"contador\"  \r\n// e é um campo do objeto state  \r\nconstructor(props) {  \r\n    super(props);  \r\n    this.state = {  \r\n        contador: 0,  \r\n        };  \r\n    }  \r\n  \r\n    render() {  \r\n        return (  \r\n            <div>  \r\n                <p>Você clicou {this.state.contador} vezes</p>  \r\n                <button  \r\n                    onClick={() =>  \r\n                        this.setState({ contador: this.state.contador + 1 })  \r\n                    }  \r\n                >  \r\n                    Clique aqui  \r\n                </button>  \r\n            </div>  \r\n        );  \r\n    }  \r\n}  \r\n\t  \r\nexport default Exemplo;  \r\n","import { Component } from 'react';  \r\nimport PropTypes from 'prop-types';\r\n\r\nconst estilo = {  \r\n    color: 'red',  \r\n    borderBottom: 'black solid 2px',  \r\n    backgroundColor: '#E6E6E6',  \r\n};    \r\n  \r\nexport class Header extends Component {  \r\n    render() {  \r\n        return (  \r\n            <div>  \r\n                <h1 style={estilo}>Olá, {this.props.nome}, seja bem-vindo!</h1>  \r\n            </div>  \r\n\t        );  \r\n\t    }  \r\n\t}  \r\n\t  \r\n\tHeader.defaultProps = {  \r\n\t    nome: 'Nome padrão',  \r\n\t};  \r\n\t  \r\n\tHeader.propTypes = {  \r\n\t    nome: PropTypes.string,  \r\n\t};  \r\n\t  \r\nexport default Header;  ","import './App.css';\nimport { Component } from 'react';\nimport Exemplo from './Components/Exemplo';\nimport Header from './Components/Header';\n\nexport class App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header nome=\"Duram\" />\n                <Exemplo />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}